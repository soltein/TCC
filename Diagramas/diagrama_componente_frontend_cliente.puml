@startuml
!define SHOW_COMPONENT_INTERFACE
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

SHOW_PERSON_PORTRAIT()

Person(cliente, "Cliente", "Pessoa que quer fazer um pedido de comida")

Container_Boundary(FronEnd_Cliente, "Frontend Cliente", "Divisão do Sistema") {
    Component(LoginController, "Login Controller", "Responsável por gerenciar a autenticação do usuário", "Angular")
    Component(LoginService, "Login Service", "Realiza a autenticação do usuário", "Angular")
    Component(UserController, "User Controller", "Responsável por gerenciar as informações do usuário", "Angular")
    Component(UserService, "User Service", "Realiza o gerenciamento das informações do usuário", "Angular")

    Component(OrderController, "Order Controller", "Responsável por gerenciar os pedidos do usuário", "Angular")
    Component(OrderService, "Order Service", "Realiza o gerenciamento dos pedidos do usuário", "Angular")

}

System_Ext(sistema_delivery, "BackEnd ", "Java Spring", "Sistema de gerenciamento completo do estabelecimento.")

Rel(cliente, LoginController, "Loga no sistema", "HTTPS")
Rel(LoginController, LoginService, "Valida os dados do cliente", "JSON/HTTPS")
Rel(LoginService, sistema_delivery, "Valida os dados do cliente", "JSON/HTTPS")

Rel(cliente, UserController, "Se cadastra no sistema", "HTTPS")
Rel(UserController, UserService, "Envia os dados do cliente", "JSON/HTTPS")
Rel(UserService, sistema_delivery, "Cadastra os dados do cliente", "JSON/HTTPS")


Rel(cliente, OrderController, "Efetua o pedido de comida", "HTTPS")
Rel(OrderController, OrderService, "Envia os dados do pedido", "JSON/HTTPS")
Rel(OrderService, sistema_delivery, "Cadastra os dados do pedido", "JSON/HTTPS")
@enduml